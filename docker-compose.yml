x-api-config: &api-config
  build: src
  env_file:
    - env/docker.env
  depends_on:
    mongo_cluster_init:
      condition: service_completed_successfully

x-mongodb-healthcheck: &mongodb-healhcheck
  healthcheck:
    test: echo 'db.runCommand("ping").ok' | mongosh 127.0.0.1:27017/test --quiet
    interval: 10s
    timeout: 10s
    retries: 5
    start_period: 40s

x-elasticsearch-healhcheck: &elasticsearch-healhcheck
  healthcheck:
    interval: 1s
    retries: 60
    test: curl --write-out 'HTTP %{http_code}' --fail --silent --output /dev/null http://127.0.0.1:9200

x-memcached-healhcheck: &memcached-healhcheck
  healthcheck:
    test: echo stats | nc 127.0.0.1 11211
    interval: 1s
    retries: 60

services:

  api_node_01:
    <<: *api-config

  mongo_cluster_init:
    image: mongo
    depends_on:
      mongo_db_node_01:
        condition: service_healthy
    volumes:
      - ./env/init-mongo.js:/scripts/init-mongo.js:ro
    entrypoint:
      [
        "mongosh",
        "--host",
        "mongo_db_node_01",
        "--file",
        "/scripts/init-mongo.js"
      ]

  mongo_db_node_01:
    image: mongo
    <<: *mongodb-healhcheck
    volumes:
      - ./data/mongo_node_01:/data/db
    command: mongod --replSet docker-replicaset
    ports:
      - 27017:27017
  nginx:
    image: nginx
    ports:
      - 80:80
    depends_on:
      - api_node_01
    volumes:
      - ./data/nginx/cache:/data/nginx/cache
      - ./env/nginx.conf:/etc/nginx/nginx.conf:ro
